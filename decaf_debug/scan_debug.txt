None class
%id% Program
None {
None def
None void
%id% main
None (
None )
None {
%type% int
%id% i
None ;
%type% int
%id% j
None ;
None for
None (
%id% i
%assign% =
%int_literal% 0
None ;
None (
%id% i
%rel_op% <
%int_literal% 10
None )
None ;
%id% i
%assign_inc% +=
%int_literal% 1
None ;
None )
None {
None if
None (
None (
%id% i
%mod% %
%int_literal% 2
None )
%eq_op% ==
%int_literal% 0
None )
None {
None print_var
None (
%id% i
None )
None ;
None print_str
None (
%string_literal% "\n"
None )
None ;
None }
None else
None {
None print_str
None (
%string_literal% "Odd\n"
None )
None ;
None }
None }
None print_str
None (
%string_literal% "i="
None )
None ;
None print_var
None (
%id% i
None )
None ;
None print_str
None (
%string_literal% " -> i*i -> "
None )
None ;
%id% j
%assign% =
None (
%id% i
%mult% *
%id% i
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% "\n"
None )
None ;
None print_str
None (
%string_literal% "j="
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% " -> (j / 8) -> "
None )
None ;
%id% j
%assign% =
None (
%id% j
%div% /
%int_literal% 8
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% "\n"
None )
None ;
None print_str
None (
%string_literal% "j="
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% " -> (j + 3) -> \n"
None )
None ;
%id% j
%assign% =
None (
%id% j
%plus% +
%int_literal% 3
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% "\n"
None )
None ;
None print_str
None (
%string_literal% "j="
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% " -> (j - 30) -> \n"
None )
None ;
%id% j
%assign% =
None (
%id% j
%minus% -
%int_literal% 30
None )
None ;
None print_var
None (
%id% j
None )
None ;
None print_str
None (
%string_literal% "\n"
None )
None ;
None }
None }
None $
