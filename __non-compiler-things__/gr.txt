0 ('<program>', '<program">', '$')
1 ('<program">', 'class', '%id%', '{', '<field_decl*>', '<method_decl*>', '}')
2 ('<program">', 'class', '%id%', '{', '<field_decl*>', '}')
3 ('<program">', 'class', '%id%', '{', '<method_decl*>', '}')
4 ('<program">', 'class', '%id%', '{', '}')
5 ('<field_decl*>', '%type%', '<field_decl>', '<field_decl*_aux>')
6 ('<field_decl*_aux>', '<field_decl*>', '<field_decl*_aux>')
7 ('<field_decl*_aux>', None)
8 ('<field_decl>', '%id%', '<subscript>', ';')
9 ('<field_decl>', '%id%', '<subscript>', '<var_array_list>', ';')
10 ('<var_array_list>', ',', '%id%', '<subscript>', '<var_array_list>')
11 ('<var_array_list>', None)
12 ('<subscript>', '[', '<expr>', ']')
13 ('<subscript>', None)
14 ('<method_decl*>', 'def', '<type|void>', '%id%', '(', '<method_args>', ')', '<block>', '<method_decl*_aux>')
15 ('<method_decl*>', 'def', '<type|void>', '%id%', '(', ')', '<block>', '<method_decl*_aux>')
16 ('<method_decl*_aux>', '<method_decl*>', '<method_decl*_aux>')
17 ('<method_decl*_aux>', None)
18 ('<type|void>', '%type%')
19 ('<type|void>', 'void')
20 ('<method_args>', '%type%', '%id%')
21 ('<method_args>', '<method_args>', '<method_args">')
22 ('<method_args">', ',', '%type%', '%id%', '<method_args">')
23 ('<method_args">', None)
24 ('<block>', '{', '<var_decl*>', '<statement*>', '}')
25 ('<var_decl*>', '<var_decl>', '<var_decl*>')
26 ('<var_decl*>', None)
27 ('<statement*>', '<statement>', '<statement*>')
28 ('<statement*>', None)
29 ('<var_decl>', '%type%', '%id%', '<args_list>', ';')
30 ('<args_list>', ',', '%id%', '<args_list>')
31 ('<args_list>', None)
32 ('<statement>', '%id%', '<subscript>', '<assign_op>', '<expr>', ';')
33 ('<statement>', '<method_call>', ';')
34 ('<statement>', 'if', '<expr>', '<block>', '<else_block>')
35 ('<statement>', 'return', ';')
36 ('<statement>', 'return', '<expr>', ';')
37 ('<statement>', 'break', ';')
38 ('<statement>', 'continue', ';')
39 ('<statement>', '<block>')
40 ('<statement>', '<expr>', ';')
41 ('<else_block>', 'else', '<block>')
42 ('<else_block>', None)
43 ('<method_call>', '%id%', '(', ')')
44 ('<method_call>', '%id%', '(', '<comma_expr>', ')')
45 ('<method_call>', 'callout', '(', '<str|null>', ')')
46 ('<method_call>', 'callout', '(', '<str|null>', '<comma_callout_arg>', ')')
47 ('<str|null>', '%string_literal%')
48 ('<comma_expr>', '<expr>', '<comma_expr">')
49 ('<comma_expr">', ',', '<expr>', '<comma_expr">')
50 ('<comma_expr">', None)
51 ('<comma_callout_arg>', '<callout_arg>', '<comma_callout_arg">')
52 ('<comma_callout_arg">', ',', '<callout_arg>', '<comma_callout_arg">')
53 ('<comma_callout_arg">', None)
54 ('<expr>', '%id%', '<subscript>')
55 ('<expr>', '<method_call>')
56 ('<expr>', '<literal>')
57 ('<expr>', '<expr>', '<bin_op>', '<expr>')
58 ('<expr>', '%minus%', '<expr>')
59 ('<expr>', '!', '<expr>')
60 ('<expr>', '(', '<expr>', ')')
61 ('<expr>', '<expr>', '<expr>')
62 ('<callout_arg>', '%string_literal%')
63 ('<bin_op>', '<arith_op>')
64 ('<bin_op>', '%rel_op%')
65 ('<bin_op>', '%eq_op%')
66 ('<bin_op>', '%cond_op%')
67 ('<literal>', '%int_literal%')
68 ('<literal>', '%char_literal%')
69 ('<literal>', '%bool_literal%')
70 ('<assign_op>', '%assign%')
71 ('<assign_op>', '%assign_inc%')
72 ('<assign_op>', '%assign_dec%')
73 ('<arith_op>', '%plus%')
74 ('<arith_op>', '%minus%')
75 ('<arith_op>', '%mult%')
76 ('<arith_op>', '%div%')
77 ('<arith_op>', '%mod%')
